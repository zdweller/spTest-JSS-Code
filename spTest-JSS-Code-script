###############################
###Code for the analysis in the
###JSS paper for the R package
###spTest
###############################

###############################
###install/load packages    ###
###############################

#install.packages("geoR")
#install.packages("spTest")
#install.packages("splines")

library("spTest")
library("fields")
library("geoR")
library("splines")
library("MASS")
set.seed(2016)

###############################
###  gridded data example   ###
###############################

data("WRFG")
image.plot(WRFG$lon-360, WRFG$lat, WRFG$WRFG.NCEP.tas, 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
legend.lab = "Temp (K)",legend.cex = 0.8,legend.line = 2.2,
xlab = "Longitude", ylab = "Latitude", 
main = "Mean WRFG-NCEP Temperatures")
world(add = T)

coords <- expand.grid(WRFG$xc,WRFG$yc)
sub <- which(coords[,1] > 2.95e6 & coords[,1] < 4.0e6 
& coords[,2] > 1.2e6 & coords[,2] < 2.25e6)
image.plot(WRFG$xc, WRFG$yc, WRFG$WRFG.NCEP.tas, 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
legend.lab = "Temp (K)",legend.cex = 0.8,legend.line = 2.2,
xlab = "Easting", ylab = "Northing", 
main = "Map Projection Coordinates")
my.coords <- coords[sub,]
rect(min(my.coords[,1]), min(my.coords[,2]), 
max(my.coords[,1]), max(my.coords[,2]), lwd = 1.5)

tas <- c(WRFG$WRFG.NCEP.tas)[sub]
x.coord <- unique(my.coords[,1])
y.coord <- unique(my.coords[,2])
nx <- length(x.coord)
ny <- length(y.coord)
tas.mat <- matrix(tas, nrow = nx, ncol = ny, byrow = F)
image.plot(x.coord, y.coord, tas.mat, 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
legend.lab = "Temp (K)",legend.cex = 0.8,legend.line = 2.2,
ylab = "Northing", xlab = "Easting",
main = "Subset of Temperatures")

###not included in JSS paper###
hist(tas, freq = F, xlab = "Temperature, K", main = "Histogram of Temperature")
z.tas <- (tas - mean(tas))/sd(tas)
qqnorm(z.tas)
abline(0,1)
###############################

geodat <- as.geodata(cbind(my.coords[,1],my.coords[,2], tas))
plot( variog4(geodat), ylab = "estimated semivariogram")
title("Directional Sample Semivariograms")

temp.data <- as.matrix(cbind(my.coords, tas))
my.delta <- 50000
mylags <-  rbind(c(1,0), c(0, 1), c(1, 1), c(-1,1))
myA <-  rbind(c(1, -1, 0 , 0), c(0, 0, 1, -1))
tr <- GuanTestGrid(spdata = temp.data, delta = my.delta, lagmat = mylags, A = myA,
 window.dims = c(4,4),pt.est.edge = TRUE, sig.est.edge = TRUE, 
 sig.est.finite = TRUE, df = 2 )
tr$alternative <- NULL
tr

###not included in JSS paper###
par(mfrow = c(1,2), oma = c(0,0,1,0))
plot(my.coords[,1], tas, xlab = "Easting", ylab = "Temperature")
plot(tas, my.coords[,2], xlab = "Temperature", ylab = "Northing")
title(main = "Scatters of Temperature vs. Coordinates" , line = -1, outer = T)
###############################

m1 <- lm(tas ~ ns(my.coords[,1], df = 3) + ns(my.coords[,2], df = 3))
summary(m1)

###not included in JSS paper###
stres <- studres(m1)
qqnorm(stres)
abline(0,1)
###############################

resid.mat <- matrix(studres(m1), nrow = nx, ncol = ny, byrow = F)
image.plot(x.coord, y.coord, resid.mat, 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
xlab = "Easting", ylab = "Northing")
title("Heat Map of Residuals")

resid.data <- cbind(temp.data[,1:2], studres(m1))
plot(variog4(as.geodata(resid.data)), ylab = "estimated semivariogram")
title("Directional Sample Semivariograms")

tr <- GuanTestGrid(spdata = resid.data, delta = my.delta, lagmat = mylags, A = myA,
 window.dims = c(2,2),pt.est.edge = TRUE, sig.est.edge = TRUE, 
 sig.est.finite = TRUE, df = 2 )
tr$p.value.finite

###############################
### non-gridded data example###
###############################

data("COmonthlyMet")
sub30 <- CO.ppt[74:103,,]
nstations <- 376
years <- 1968:1997
nyears <- length(years)
yr.avg <- matrix(data = NA, nrow = nstations, ncol = nyears)
for(i in 1:nyears){
	yr.dat <- sub30[i,,]
	yr.avg[,i] <- apply(yr.dat, 2 , mean, na.rm = T)
}
avg30 <- apply(yr.avg, 1, mean, na.rm = T)
quilt.plot(CO.loc, log(avg30), 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
legend.lab = "Precip (log mm)",legend.cex = 0.8,legend.line = 2.2,
xlab = "Longitude", ylab = "Latitude",
main = "Quilt Plot of log(precip)")
US(add = T)

quilt.plot(CO.loc, CO.elev, 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
legend.lab = "Elevation (meters)",legend.cex = 0.8,legend.line = 2.7,
xlab = "Longitude", ylab = "Latitude",
main = "Quilt Plot of Elevation")
US(add = T)

###not included in JSS paper###
par(mfrow = c(1,2))
plot(CO.loc[,1], log(avg30), xlab = "Longitude", ylab = "log(precip)",
main = "Scatter of log(precip) vs. Longitude")
plot( log(avg30), CO.loc[,2], xlab = "log(precip)", ylab = "Latitude",
main = "Scatter of Latitude vs log(precip)")
###############################

plot(CO.elev, log(avg30) , xlab = "Elevation", ylab = "log(precip)",
main = "Scatter of log(precip) vs. Elevation")
m1 <- lm( log(avg30) ~ ns(CO.elev, df = 3))
summary(m1)
fits <- m1$fitted.values
bad <- is.na(avg30)
x <- CO.elev[which(!bad)]
lines(sort(x), fits[order(x)], lwd = 3, col = "red")

qqnorm(studres(m1))
abline(0,1)

precip.resid <- cbind(CO.loc[which(!bad),][,1],CO.loc[which(!bad),][,2] , studres(m1))
geodat <- as.geodata(precip.resid) 
plot(variog4(geodat), ylab = "estimated semivariogram", legend = F)
legend("bottomright", legend = c(expression(0*degree), expression(45*degree), expression(90*degree), expression(135*degree)), col = 1:4, lty = 1:4)
title("Directional Sample Semivariograms")

###not included in JSS paper###
###################
# Test CSR
###################
plot(precip.resid[,1:2])
library(spatstat)
min(precip.resid[,1])
max(precip.resid[,1])
min(precip.resid[,2])
max(precip.resid[,2])
my.xlims <-  c(-109.5, -101)
my.ylims <-  c(36.5, 41.5)
mywin <- owin(xrange = my.xlims, yrange = my.ylims)
pp <- ppp(precip.resid[,1], precip.resid[,2], window = mywin )

#A test for complete spatial randomness
hopskel.test(pp)
###############################


mylags <- 0.75 * rbind(c(1,0), c(0,1), c(1,1), c(-1,1))
myA <- rbind(c(1, -1, 0 , 0), c(0, 0, 1, -1))

quilt.plot(precip.resid[,1:2], precip.resid[,3], 
col = two.colors(n = 256, start = "blue3", end = "red3", middle = "gray60"),
xlab = "Longitude", ylab = "Latitude")
title("Quilt Plot of Residuals and Grid Used for Subsampling")
min(precip.resid[,1])
max(precip.resid[,1])
min(precip.resid[,2])
max(precip.resid[,2])
# The limits of the sampling region should be 
# slightly larger than the min/max coordinates.
my.xlims <-  c(-109.5, -101)
my.ylims <-  c(36.5, 41.5)
xlen <-  my.xlims[2]-my.xlims[1]
ylen <-  my.ylims[2]-my.ylims[1]
my.grid.spacing <-  c(xlen/16, ylen/12)
xgrid <- seq(my.xlims[1], my.xlims[2], by = my.grid.spacing[1])
ygrid <- seq(my.ylims[1], my.ylims[2], by = my.grid.spacing[2])
abline(v = xgrid, lty = 2)
abline(h = ygrid, lty = 2)

myh <-  0.7
myh.sb <-  0.7
tr.guan <- GuanTestUnif(spdata = precip.resid, lagmat = mylags, A = myA, df = 2, h = myh,
kernel = "norm", truncation = 1.5, xlims = my.xlims, ylims = my.ylims, 
grid.spacing = my.grid.spacing, window.dims = c(4,3), subblock.h = myh.sb)
tr.guan$p.value

###not included in JSS paper###
#compare estimates of the semivariance to those
#given by geoR
tr.guan$gamma.hat
plot(svar4, legend = F)
abline(v = 0.75)

#Check sensitivity to bandwidth parameters
myh <-  0.6
myh.sb <-  0.6
tr.guan <- GuanTestUnif(spdata = precip.resid, lagmat = mylags, A = myA, df = 2, h = myh,
kernel = "norm", truncation = 1.5, xlims = my.xlims, ylims = my.ylims, 
grid.spacing = my.grid.spacing, window.dims = c(4,3), subblock.h = myh.sb)
tr.guan$pvalue.chisq

myh <-  0.8
myh.sb <-  0.8
tr.guan <- GuanTestUnif(spdata = precip.resid, lagmat = mylags, A = myA, df = 2, h = myh,
kernel = "norm", truncation = 1.5, xlims = my.xlims, ylims = my.ylims, 
grid.spacing = my.grid.spacing, window.dims = c(4,3), subblock.h = myh.sb)
tr.guan$pvalue.chisq
###############################


tr.maity <- MaityTest(spdata = precip.resid, lagmat = mylags, A = myA, df = 2, 
xlims = my.xlims, ylims = my.ylims, grid.spacing = my.grid.spacing, 
block.dims = c(4,3), nBoot = 100, kappa = 1)
tr.maity$p.value

###not included in JSS paper###
#check sensitivity to the number of bootstrap samples
tr.maity <- MaityTest(spdata = precip.resid, lagmat = mylags, A = myA, df = 2, 
xlims = my.xlims, ylims = my.ylims, grid.spacing = my.grid.spacing, 
block.dims = c(4,3), nBoot = 200, kappa = 1)
tr.maity$p.value
###############################
